// Setup gRPC protobuf meta
syntax = "proto3";
option go_package = "github.com/cble-platform/cble-provider-grpc/pkg/provider";
import "google/protobuf/struct.proto";
import "common.proto";

// gRPC Service
service Provider {
  rpc Handshake(HandshakeRequest) returns (HandshakeReply) {}
  rpc Deploy(DeployRequest) returns (DeployReply) {}
  rpc Destroy(DestroyRequest) returns (DestroyReply) {}
}

// Deploy
message DeployRequest {
  string deployment_id = 1;
  bytes blueprint = 2;
  google.protobuf.Struct templateVars = 3;
}

message DeployReply {
  string deployment_id = 1;
  RPCStatus status = 2;
  google.protobuf.Struct deployment_state = 3;
  google.protobuf.Struct deployment_vars = 4;
}

// Destroy
message DestroyRequest {
  string deployment_id = 1;
  bytes blueprint = 2;
  google.protobuf.Struct templateVars = 3;
  google.protobuf.Struct deployment_state = 4;
  google.protobuf.Struct deployment_vars = 5;
}

message DestroyReply {
  string deployment_id = 1;
  RPCStatus status = 2;
  google.protobuf.Struct deployment_state = 3;
  google.protobuf.Struct deployment_vars = 4;
}